GROUP BY 
1.Contare quanti iscritti ci sono stati ogni anno

QUERY:
SELECT COUNT(*) AS Numero_iscritti , year(enrolment_date) 
FROM students
GROUP BY year(enrolment_date);

2.Contare gli insegnanti che hanno l'ufficio nello stesso edificio

QUERY:
SELECT COUNT(*) AS Numero_insegnanti_per_ufficio , office_address 
FROM teachers
GROUP BY office_address;

3.Calcolare la media dei voti di ogni appello d'esame

QUERY:
SELECT exam_id AS id_appello_esame , AVG(Vote) AS media_voti
FROM exam_student
GROUP BY exam_id
ORDER BY exam_id;


4.Contare quanti corsi di laurea ci sono per ogni dipartimento

QUERY:
SELECT department_id AS id_dipartimento , COUNT(name) AS numero_corsi
FROM degrees
GROUP BY department_id
ORDER BY department_id ASC;

JOIN
1.Selezionare tutti gli studenti iscritti al corso di laurea in economia

QUERY:
SELECT students.name AS nome_studente , students.surname AS cognome_studente , degrees.name
FROM students 
INNER JOIN degrees
ON degrees.id=students.degree_id
WHERE degrees.name = 'Corso di laurea in economia';


2.Selezionare tutti i corsi di laurea del dipartimento di neuroscienze

QUERY:
SELECT degrees.name , departments.name
FROM degrees
INNER JOIN departments 
ON departments.id = degrees.department_id
WHERE departments.name = 'Dipartimento di neuroscienze';

3:Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

QUERY:
SELECT teachers.name , courses.name
FROM teachers 
INNER JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses
ON courses.id = course_teacher.course_id
WHERE teachers.name = 'Fulvio' AND teachers.surname = 'Amato';

4.Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento
in ordine alfabetico per nome e cognome

QUERY:
SELECT students.name , students.surname , degrees.name , degrees.level , departments.name
FROM students
INNER JOIN degrees
ON students.degree_id = degrees.id
JOIN departments
ON departments.id = degrees.department_id
ORDER BY students.name , students.surname;

5.Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

QUERY:
SELECT degrees.name , courses.name , teachers.name , teachers.surname 
FROM teachers 
JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses 
ON courses.id = course_teacher.course_id
JOIN degrees
ON degrees.id = courses.degree_id
ORDER BY degrees.name;

6.Selezionare tutti i docenti che insegnano al dipartimento di matematica(54)

QUERY:
SELECT DISTINCT departments.name ,teachers.name , teachers.surname 
FROM teachers 
JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses 
ON courses.id = course_teacher.course_id
JOIN degrees
ON degrees.id = courses.degree_id
JOIN departments
ON departments.id = degrees.department_id
WHERE departments.name = 'dipartimento di matematica';

7:BONUS: Selezionare per ogni studente quanti tentativi d'esame ha sostenuto per superare ogni esame
 
QUERY:
SELECT students.name , students.surname , COUNT(vote) AS tentativi 
FROM students
JOIN exam_student
ON students.id=exam_student.student_id
JOIN exams
ON exams.id = exam_student.exam_id
WHERE vote>17
GROUP BY students.name , students.surname
